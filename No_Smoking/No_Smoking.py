# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'No_Smokingg.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtGui import QColor, QTextCharFormat
from PyQt5.QtCore import Qt, QDate, QDateTime

import sqlite3

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1058, 595)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 1058, 595))
        self.stackedWidget.setObjectName("stackedWidget")
        self.Home_page_0 = QtWidgets.QWidget()
        self.Home_page_0.setObjectName("Home_page_0")
        self.label = QtWidgets.QLabel(self.Home_page_0)
        self.label.setGeometry(QtCore.QRect(0, 0, 1058, 595))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("2.png"))
        self.label.setObjectName("label")
        self.Home0_Registration1_pushButton = QtWidgets.QPushButton(self.Home_page_0)
        self.Home0_Registration1_pushButton.setGeometry(QtCore.QRect(660, 190, 331, 101))
        self.Home0_Registration1_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.Home0_Registration1_pushButton.setText("")
        self.Home0_Registration1_pushButton.setObjectName("Home0_Registration1_pushButton")
        self.Home0_Registration1_pushButton.clicked.connect(self.toggle_1)
        self.Home0_Entrance2_pushButton = QtWidgets.QPushButton(self.Home_page_0)
        self.Home0_Entrance2_pushButton.setGeometry(QtCore.QRect(730, 350, 171, 101))
        self.Home0_Entrance2_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.Home0_Entrance2_pushButton.setText("")
        self.Home0_Entrance2_pushButton.setObjectName("Home0_Entrance2_pushButton")
        self.Home0_Entrance2_pushButton.clicked.connect(self.toggle_2)
        self.stackedWidget.addWidget(self.Home_page_0)
        self.Registration_page_1 = QtWidgets.QWidget()
        self.Registration_page_1.setObjectName("Registration_page_1")
        self.label_2 = QtWidgets.QLabel(self.Registration_page_1)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 1058, 595))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("3.png"))
        self.label_2.setObjectName("label_2")
        self.Registration_Login_lineEdit = QtWidgets.QLineEdit(self.Registration_page_1)
        self.Registration_Login_lineEdit.setGeometry(QtCore.QRect(140, 205, 331, 41))
        self.Registration_Login_lineEdit.setObjectName("Registration_Login_lineEdit")
        self.Registration_Password_lineEdit = QtWidgets.QLineEdit(self.Registration_page_1)
        self.Registration_Password_lineEdit.setGeometry(QtCore.QRect(160, 350, 311, 41))
        self.Registration_Password_lineEdit.setObjectName("Registration_Password_lineEdit")
        self.Registration1_Calendar3_pushButton = QtWidgets.QPushButton(self.Registration_page_1)
        self.Registration1_Calendar3_pushButton.setGeometry(QtCore.QRect(30, 430, 471, 101))
        self.Registration1_Calendar3_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.Registration1_Calendar3_pushButton.setText("")
        self.Registration1_Calendar3_pushButton.setObjectName("Registration1_Calendar3_pushButton")
        self.Registration1_Calendar3_pushButton.clicked.connect(self.registration)
        self.stackedWidget.addWidget(self.Registration_page_1)
        self.Entrance_page_2 = QtWidgets.QWidget()
        self.Entrance_page_2.setObjectName("Entrance_page_2")
        self.label_3 = QtWidgets.QLabel(self.Entrance_page_2)
        self.label_3.setGeometry(QtCore.QRect(0, 0, 1058, 595))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("4.png"))
        self.label_3.setObjectName("label_3")
        self.Entrance2_Login_lineEdit = QtWidgets.QLineEdit(self.Entrance_page_2)
        self.Entrance2_Login_lineEdit.setGeometry(QtCore.QRect(140, 205, 331, 41))
        self.Entrance2_Login_lineEdit.setObjectName("Entrance2_Login_lineEdit")
        self.Entrance_Password_lineEdit = QtWidgets.QLineEdit(self.Entrance_page_2)
        self.Entrance_Password_lineEdit.setGeometry(QtCore.QRect(160, 350, 311, 41))
        self.Entrance_Password_lineEdit.setObjectName("Entrance_Password_lineEdit")
        self.Entrance2_Calendar3_pushButton = QtWidgets.QPushButton(self.Entrance_page_2)
        self.Entrance2_Calendar3_pushButton.setGeometry(QtCore.QRect(150, 430, 231, 101))
        self.Entrance2_Calendar3_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.Entrance2_Calendar3_pushButton.setText("")
        self.Entrance2_Calendar3_pushButton.setObjectName("Entrance2_Calendar3_pushButton")
        self.Entrance2_Calendar3_pushButton.clicked.connect(self.entrance)
        self.stackedWidget.addWidget(self.Entrance_page_2)
        self.Calendar_page_3 = QtWidgets.QWidget()
        self.Calendar_page_3.setObjectName("Calendar_page_3")
        self.label_4 = QtWidgets.QLabel(self.Calendar_page_3)
        self.label_4.setGeometry(QtCore.QRect(0, 0, 1058, 595))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("1.png"))
        self.label_4.setObjectName("label_4")
        self.Calendar_calendarWidget = QtWidgets.QCalendarWidget(self.Calendar_page_3)
        self.Calendar_calendarWidget.setGeometry(QtCore.QRect(570, 185, 401, 251))
        self.Calendar_calendarWidget.setObjectName("Calendar_calendarWidget")
        self.Calendar_calendarWidget.clicked[QDate].connect(self.date_clicked)
        self.TEXT_IS_BD_label = QtWidgets.QLabel(self.Calendar_page_3)
        self.TEXT_IS_BD_label.setGeometry(QtCore.QRect(610, 450, 311, 91))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.TEXT_IS_BD_label.setFont(font)
        self.TEXT_IS_BD_label.setText("")
        self.TEXT_IS_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.TEXT_IS_BD_label.setObjectName("TEXT_IS_BD_label")
        self.stackedWidget.addWidget(self.Calendar_page_3)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))

    def toggle_1(self):
        self.stackedWidget.setCurrentIndex(1)

    def toggle_2(self):
        self.stackedWidget.setCurrentIndex(2)

    def registration(self):
        con = sqlite3.connect('NoSmoke.db')
        cur = con.cursor()
        a = self.Registration_Login_lineEdit.text()
        b = self.Registration_Password_lineEdit.text()
        query1 = f" INSERT INTO users (login,password) VALUES('{a}','{b}')"
        cur.execute(query1)
        con.commit()
        cur.close()
        con.close()
        # переходим на страницу календаря
        self.stackedWidget.setCurrentIndex(3)
        self.count_records()

    def date_clicked(self, date):
        if date <= QDate.currentDate():
            con = sqlite3.connect('NoSmoke.db')
            cur = con.cursor()
            login = self.Registration_Login_lineEdit.text() or self.Entrance2_Login_lineEdit.text()
            password = self.Registration_Password_lineEdit.text() or self.Entrance_Password_lineEdit.text()

            # Проверяем, есть ли уже отметка для этой даты
            cur.execute('''SELECT * FROM calendar WHERE date=? AND login=? AND password=?''',
                        (date.toString(Qt.ISODate), login, password))
            existing_record = cur.fetchone()

            if existing_record:
                # Если запись уже существует, то не добавляем ее заново
                return
            else:  # Иначе добавляем новую запись в таблицу calendar
                cur.execute('''INSERT INTO calendar (date, selected, login, password)
                                             VALUES (?, ?, ?, ? )''', (date.toString(Qt.ISODate), 1, login, password))
                con.commit()
                self.count_records()
                self.Calendar_calendarWidget.setDateTextFormat(date, self.color())

        else:
            self.Calendar_calendarWidget.setDateTextFormat(date, self.default())



    def color(self):
        text_format = self.default()
        text_format.setBackground(QColor(147, 112, 219, 127))
        return text_format

    def default(self):
        text_format = self.Calendar_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format

    def entrance(self):
        login = self.Entrance2_Login_lineEdit.text()
        password = self.Entrance_Password_lineEdit.text()

        # Подключиться к базе данных
        conn = sqlite3.connect('NoSmoke.db')
        cursor = conn.cursor()

        # Проверить, существует ли пользователь с таким логином и паролем в таблице users
        cursor.execute("SELECT * FROM users WHERE login=? AND password=?", (login, password))
        user = cursor.fetchone()


        if user:
            self.stackedWidget.setCurrentIndex(3)
            login = self.Entrance2_Login_lineEdit.text()
            password = self.Entrance_Password_lineEdit.text()

            # Подключиться к базе данных
            conn = sqlite3.connect('NoSmoke.db')
            cursor = conn.cursor()

            cursor.execute("SELECT date FROM calendar WHERE login=? AND password=?", (login, password))
            dates = cursor.fetchall()

            for date in dates:
                date = QDate.fromString(date[0], 'yyyy-MM-dd')
                self.Calendar_calendarWidget.setDateTextFormat(date, self.color())
            self.count_records()

        else:
            self.stackedWidget.setCurrentIndex(0)

    def count_records(self):
        # Подключиться к базе данных
        conn = sqlite3.connect('NoSmoke.db')
        cursor = conn.cursor()
        login = self.Registration_Login_lineEdit.text() or self.Entrance2_Login_lineEdit.text()
        password = self.Registration_Password_lineEdit.text() or self.Entrance_Password_lineEdit.text()
        # Выполнить запрос, чтобы получить количество записей в таблице calendar
        cursor.execute('SELECT COUNT(*) FROM calendar WHERE login=? AND password=?', (login, password))
        count = cursor.fetchone()[0]

        # Вывести количество записей на экран
        self.TEXT_IS_BD_label.setText(str(count))

        # Закрыть соединение с базой данных
        conn.close()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
