# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Habit_trecker.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sqlite3
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap
import informationDatabase
import sys
from PyQt5.QtGui import QColor
from PyQt5.QtWidgets import QApplication, QMainWindow, QCalendarWidget, QLabel, QVBoxLayout, QWidget
from PyQt5.QtCore import Qt, QDate
import sqlite3

from PyQt5 import QtWidgets, QtCore


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1087, 611)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.stackedWidget.setObjectName("stackedWidget")
        self.Main_Page_0 = QtWidgets.QWidget()
        self.Main_Page_0.setObjectName("Main_Page_0")
        self.label = QtWidgets.QLabel(self.Main_Page_0)
        self.label.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("1.png"))
        self.label.setObjectName("label")
        self.SWITCH_MAIN_0___REGISRTATION_1_pushButton = QtWidgets.QPushButton(self.Main_Page_0)
        self.SWITCH_MAIN_0___REGISRTATION_1_pushButton.setGeometry(QtCore.QRect(600, 480, 251, 41))
        self.SWITCH_MAIN_0___REGISRTATION_1_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_MAIN_0___REGISRTATION_1_pushButton.setText("")
        self.SWITCH_MAIN_0___REGISRTATION_1_pushButton.setObjectName("SWITCH_MAIN_0___REGISRTATION_1_pushButton")
        self.SWITCH_MAIN_0___REGISRTATION_1_pushButton.clicked.connect(self.switch_0_1)
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton = QtWidgets.QPushButton(self.Main_Page_0)
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton.setGeometry(QtCore.QRect(610, 540, 241, 31))
        font = QtGui.QFont()
        font.setFamily("Mongolian Baiti")
        font.setPointSize(20)
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton.setFont(font)
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;\n"
"color:#f2efeb;")
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton.setObjectName("SWITCH_MAIN_0___ENTRANCE_12_pushButton")
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton.clicked.connect(self.switch_0_12)
        self.stackedWidget.addWidget(self.Main_Page_0)
        self.Registration_Page_1 = QtWidgets.QWidget()
        self.Registration_Page_1.setObjectName("Registration_Page_1")
        self.label_2 = QtWidgets.QLabel(self.Registration_Page_1)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_2.setText("")
        self.label_2.setPixmap(QtGui.QPixmap("2.png"))
        self.label_2.setObjectName("label_2")
        self.SWITCH_REGISTRATION_1___HOME_2_pushButton = QtWidgets.QPushButton(self.Registration_Page_1)
        self.SWITCH_REGISTRATION_1___HOME_2_pushButton.setGeometry(QtCore.QRect(556, 468, 491, 110))
        self.SWITCH_REGISTRATION_1___HOME_2_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_REGISTRATION_1___HOME_2_pushButton.setText("")
        self.SWITCH_REGISTRATION_1___HOME_2_pushButton.setObjectName("SWITCH_REGISTRATION_1___HOME_2_pushButton")
        self.SWITCH_REGISTRATION_1___HOME_2_pushButton.clicked.connect(self.registration)
        self.LOGIN_lineEdit = QtWidgets.QLineEdit(self.Registration_Page_1)
        self.LOGIN_lineEdit.setGeometry(QtCore.QRect(300, 305, 171, 31))
        self.LOGIN_lineEdit.setObjectName("LOGIN_lineEdit")
        self.PASSWORD_lineEdit = QtWidgets.QLineEdit(self.Registration_Page_1)
        self.PASSWORD_lineEdit.setGeometry(QtCore.QRect(310, 425, 161, 31))
        self.PASSWORD_lineEdit.setObjectName("PASSWORD_lineEdit")
        self.stackedWidget.addWidget(self.Registration_Page_1)
        self.Home_Page_2 = QtWidgets.QWidget()
        self.Home_Page_2.setObjectName("Home_Page_2")

        self.label_3 = QtWidgets.QLabel(self.Home_Page_2)
        self.label_3.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("3.png"))
        self.label_3.setObjectName("label_3")
        self.SWITCH_HOME_2___GOOD_HABIT_3_pushButton = QtWidgets.QPushButton(self.Home_Page_2)
        self.SWITCH_HOME_2___GOOD_HABIT_3_pushButton.setGeometry(QtCore.QRect(60, 160, 301, 391))
        self.SWITCH_HOME_2___GOOD_HABIT_3_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_HOME_2___GOOD_HABIT_3_pushButton.setText("")
        self.SWITCH_HOME_2___GOOD_HABIT_3_pushButton.setObjectName("SWITCH_HOME_2___GOOD_HABIT_3_pushButton")
        self.SWITCH_HOME_2___GOOD_HABIT_3_pushButton.clicked.connect(self.switch_0_3)
        self.SWITCH_HOME_2___BAD_HABIT_7_pushButton = QtWidgets.QPushButton(self.Home_Page_2)
        self.SWITCH_HOME_2___BAD_HABIT_7_pushButton.setGeometry(QtCore.QRect(390, 160, 301, 391))
        self.SWITCH_HOME_2___BAD_HABIT_7_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_HOME_2___BAD_HABIT_7_pushButton.setText("")
        self.SWITCH_HOME_2___BAD_HABIT_7_pushButton.setObjectName("SWITCH_HOME_2___BAD_HABIT_7_pushButton")
        self.SWITCH_HOME_2___BAD_HABIT_7_pushButton.clicked.connect(self.switch_0_7)
        self.SWITCH_HOME_2___ADVICE_11_pushButton = QtWidgets.QPushButton(self.Home_Page_2)
        self.SWITCH_HOME_2___ADVICE_11_pushButton.setGeometry(QtCore.QRect(720, 160, 301, 391))
        self.SWITCH_HOME_2___ADVICE_11_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_HOME_2___ADVICE_11_pushButton.setText("")
        self.SWITCH_HOME_2___ADVICE_11_pushButton.setObjectName("SWITCH_HOME_2___ADVICE_11_pushButton")
        self.SWITCH_HOME_2___ADVICE_11_pushButton.clicked.connect(self.switch_2_11)
        self.stackedWidget.addWidget(self.Home_Page_2)
        self.Good_Habit_Page_3 = QtWidgets.QWidget()
        self.Good_Habit_Page_3.setObjectName("Good_Habit_Page_3")
        self.label_4 = QtWidgets.QLabel(self.Good_Habit_Page_3)
        self.label_4.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_4.setText("")
        self.label_4.setPixmap(QtGui.QPixmap("4.png"))
        self.label_4.setObjectName("label_4")
        self.SWITCH_GOOD_HABIT_3___HOME_2_pushButton = QtWidgets.QPushButton(self.Good_Habit_Page_3)
        self.SWITCH_GOOD_HABIT_3___HOME_2_pushButton.setGeometry(QtCore.QRect(10, 10, 141, 41))
        self.SWITCH_GOOD_HABIT_3___HOME_2_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_GOOD_HABIT_3___HOME_2_pushButton.setText("")
        self.SWITCH_GOOD_HABIT_3___HOME_2_pushButton.setObjectName("SWITCH_GOOD_HABIT_3___HOME_2_pushButton")
        self.SWITCH_GOOD_HABIT_3___HOME_2_pushButton.clicked.connect(self.switch_0_2)
        self.SWITCH_GOOD_HABIT_3___DREAM_4_pushButton = QtWidgets.QPushButton(self.Good_Habit_Page_3)
        self.SWITCH_GOOD_HABIT_3___DREAM_4_pushButton.setGeometry(QtCore.QRect(60, 320, 301, 231))
        self.SWITCH_GOOD_HABIT_3___DREAM_4_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_GOOD_HABIT_3___DREAM_4_pushButton.setText("")
        self.SWITCH_GOOD_HABIT_3___DREAM_4_pushButton.setObjectName("SWITCH_GOOD_HABIT_3___DREAM_4_pushButton")
        self.SWITCH_GOOD_HABIT_3___DREAM_4_pushButton.clicked.connect(self.switch_3_4)
        self.SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton = QtWidgets.QPushButton(self.Good_Habit_Page_3)
        self.SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton.setGeometry(QtCore.QRect(390, 320, 301, 261))
        self.SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton.setText("")
        self.SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton.setObjectName("SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton")
        self.SWITCH_GOOD_HABIT_3___WORK_OUT_5_pushButton.clicked.connect(self.switch_3_5)
        self.SWITCH_GOOD_HABIT_3___WATER_6_pushButton = QtWidgets.QPushButton(self.Good_Habit_Page_3)
        self.SWITCH_GOOD_HABIT_3___WATER_6_pushButton.setGeometry(QtCore.QRect(720, 320, 301, 281))
        self.SWITCH_GOOD_HABIT_3___WATER_6_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_GOOD_HABIT_3___WATER_6_pushButton.setText("")
        self.SWITCH_GOOD_HABIT_3___WATER_6_pushButton.setObjectName("SWITCH_GOOD_HABIT_3___WATER_6_pushButton")
        self.SWITCH_GOOD_HABIT_3___WATER_6_pushButton.clicked.connect(self.switch_3_6)
        self.DREAM_PHOTO_BD = QtWidgets.QLabel(self.Good_Habit_Page_3)
        self.DREAM_PHOTO_BD.setGeometry(QtCore.QRect(60, 50, 301, 241))
        self.DREAM_PHOTO_BD.setText("")
        self.DREAM_PHOTO_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.DREAM_PHOTO_BD.setObjectName("DREAM_PHOTO_BD")
        self.WORK_OUT_PHOTO_BD = QtWidgets.QLabel(self.Good_Habit_Page_3)
        self.WORK_OUT_PHOTO_BD.setGeometry(QtCore.QRect(393, 50, 301, 241))
        self.WORK_OUT_PHOTO_BD.setText("")
        self.WORK_OUT_PHOTO_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.WORK_OUT_PHOTO_BD.setObjectName("WORK_OUT_PHOTO_BD")
        self.WATER_PHOTO_BD = QtWidgets.QLabel(self.Good_Habit_Page_3)
        self.WATER_PHOTO_BD.setGeometry(QtCore.QRect(725, 50, 301, 241))
        self.WATER_PHOTO_BD.setText("")
        self.WATER_PHOTO_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.WATER_PHOTO_BD.setObjectName("WATER_PHOTO_BD")
        self.stackedWidget.addWidget(self.Good_Habit_Page_3)
        self.Dream_Page_4 = QtWidgets.QWidget()
        self.Dream_Page_4.setObjectName("Dream_Page_4")
        self.label_7 = QtWidgets.QLabel(self.Dream_Page_4)
        self.label_7.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_7.setText("")
        self.label_7.setPixmap(QtGui.QPixmap("7.png"))
        self.label_7.setObjectName("label_7")
        self.SWITCH_DREAM_4___GOOD_HABIT_3_pushButton = QtWidgets.QPushButton(self.Dream_Page_4)
        self.SWITCH_DREAM_4___GOOD_HABIT_3_pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.SWITCH_DREAM_4___GOOD_HABIT_3_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_DREAM_4___GOOD_HABIT_3_pushButton.setText("")
        self.SWITCH_DREAM_4___GOOD_HABIT_3_pushButton.setObjectName("SWITCH_DREAM_4___GOOD_HABIT_3_pushButton")
        self.SWITCH_DREAM_4___GOOD_HABIT_3_pushButton.clicked.connect(self.switch_0_3)
        self.DREAM_BD_label = QtWidgets.QLabel(self.Dream_Page_4)
        self.DREAM_BD_label.setGeometry(QtCore.QRect(0, 180, 541, 71))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.DREAM_BD_label.setFont(font)
        self.DREAM_BD_label.setStyleSheet("color:rgb(255, 255, 255);")
        self.DREAM_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.DREAM_BD_label.setObjectName("DREAM_BD_label")
        self.PHOTO_DREAM_OUT_BD = QtWidgets.QLabel(self.Dream_Page_4)
        self.PHOTO_DREAM_OUT_BD.setGeometry(QtCore.QRect(540, 0, 551, 611))
        self.PHOTO_DREAM_OUT_BD.setText("")
        self.PHOTO_DREAM_OUT_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.PHOTO_DREAM_OUT_BD.setObjectName("PHOTO_DREAM_OUT_BD")
        self.DREAM_calendarWidget = QtWidgets.QCalendarWidget(self.Dream_Page_4)
        self.DREAM_calendarWidget.setGeometry(QtCore.QRect(0, 250, 541, 361))
        self.DREAM_calendarWidget.setStyleSheet("QCalendarWidget.QMenu.QHeaderView {\n"
"    background-color: rgb(0, 255, 255);\n"
"}\n"
"\n"
"")
        self.DREAM_calendarWidget.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.DREAM_calendarWidget.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.DREAM_calendarWidget.setObjectName("DREAM_calendarWidget")
        # Подключаем слот on_date_clicked_1 к сигналу clicked календаря
        self.DREAM_calendarWidget.clicked[QDate].connect(self.date_clicked_1)
        self.stackedWidget.addWidget(self.Dream_Page_4)
        self.Work_Out_Page_5 = QtWidgets.QWidget()
        self.Work_Out_Page_5.setObjectName("Work_Out_Page_5")
        self.label_8 = QtWidgets.QLabel(self.Work_Out_Page_5)
        self.label_8.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_8.setText("")
        self.label_8.setPixmap(QtGui.QPixmap("7.png"))
        self.label_8.setObjectName("label_8")
        self.SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton = QtWidgets.QPushButton(self.Work_Out_Page_5)
        self.SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton.setText("")
        self.SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton.setObjectName("SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton")
        self.SWITCH_WORK_OUT_5___GOOD_HABIT_3_pushButton.clicked.connect(self.switch_0_3)
        self.WORK_OUT_BD_label = QtWidgets.QLabel(self.Work_Out_Page_5)
        self.WORK_OUT_BD_label.setGeometry(QtCore.QRect(0, 180, 541, 71))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.WORK_OUT_BD_label.setFont(font)
        self.WORK_OUT_BD_label.setStyleSheet("color:rgb(255, 255, 255);")
        self.WORK_OUT_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.WORK_OUT_BD_label.setObjectName("WORK_OUT_BD_label")
        self.PHOTO_WORK_OUT_BD = QtWidgets.QLabel(self.Work_Out_Page_5)
        self.PHOTO_WORK_OUT_BD.setGeometry(QtCore.QRect(540, 0, 551, 611))
        self.PHOTO_WORK_OUT_BD.setText("")
        self.PHOTO_WORK_OUT_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.PHOTO_WORK_OUT_BD.setObjectName("PHOTO_WORK_OUT_BD")
        self.WORK_OUT_calendarWidget = QtWidgets.QCalendarWidget(self.Work_Out_Page_5)
        self.WORK_OUT_calendarWidget.setGeometry(QtCore.QRect(0, 250, 541, 361))
        self.WORK_OUT_calendarWidget.setStyleSheet("QCalendarWidget.QMenu.QHeaderView {\n"
"    background-color: rgb(0, 255, 255);\n"
"}\n"
"\n"
"")
        self.WORK_OUT_calendarWidget.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.WORK_OUT_calendarWidget.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.WORK_OUT_calendarWidget.setObjectName("WORK_OUT_calendarWidget")
        self.WORK_OUT_calendarWidget.clicked[QDate].connect(self.date_clicked_2)
        self.stackedWidget.addWidget(self.Work_Out_Page_5)
        self.Water_Page_6 = QtWidgets.QWidget()
        self.Water_Page_6.setObjectName("Water_Page_6")
        self.label_9 = QtWidgets.QLabel(self.Water_Page_6)
        self.label_9.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap("7.png"))
        self.label_9.setObjectName("label_9")
        self.SWITCH_WATER_6___GOOD_HABIT_3_pushButton = QtWidgets.QPushButton(self.Water_Page_6)
        self.SWITCH_WATER_6___GOOD_HABIT_3_pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.SWITCH_WATER_6___GOOD_HABIT_3_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_WATER_6___GOOD_HABIT_3_pushButton.setText("")
        self.SWITCH_WATER_6___GOOD_HABIT_3_pushButton.setObjectName("SWITCH_WATER_6___GOOD_HABIT_3_pushButton")
        self.SWITCH_WATER_6___GOOD_HABIT_3_pushButton.clicked.connect(self.switch_0_3)
        self.WATER_BD_label = QtWidgets.QLabel(self.Water_Page_6)
        self.WATER_BD_label.setGeometry(QtCore.QRect(0, 180, 541, 71))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.WATER_BD_label.setFont(font)
        self.WATER_BD_label.setStyleSheet("color:rgb(255, 255, 255);")
        self.WATER_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.WATER_BD_label.setObjectName("WATER_BD_label")
        self.PHOTO_WATER_BD = QtWidgets.QLabel(self.Water_Page_6)
        self.PHOTO_WATER_BD.setGeometry(QtCore.QRect(540, 0, 551, 611))
        self.PHOTO_WATER_BD.setText("")
        self.PHOTO_WATER_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.PHOTO_WATER_BD.setObjectName("PHOTO_WATER_BD")
        self.WATER_calendarWidget = QtWidgets.QCalendarWidget(self.Water_Page_6)
        self.WATER_calendarWidget.setGeometry(QtCore.QRect(0, 250, 541, 361))
        self.WATER_calendarWidget.setStyleSheet("QCalendarWidget.QMenu.QHeaderView {\n"
"    background-color: rgb(0, 255, 255);\n"
"}\n"
"\n"
"")
        self.WATER_calendarWidget.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.WATER_calendarWidget.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.WATER_calendarWidget.setObjectName("WATER_calendarWidget")
        self.WATER_calendarWidget.clicked[QDate].connect(self.date_clicked_3)
        self.stackedWidget.addWidget(self.Water_Page_6)
        self.Bad_Habit_Page_7 = QtWidgets.QWidget()
        self.Bad_Habit_Page_7.setObjectName("Bad_Habit_Page_7")
        self.label_5 = QtWidgets.QLabel(self.Bad_Habit_Page_7)
        self.label_5.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_5.setText("")
        self.label_5.setPixmap(QtGui.QPixmap("5.png"))
        self.label_5.setObjectName("label_5")
        self.SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton = QtWidgets.QPushButton(self.Bad_Habit_Page_7)
        self.SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton.setGeometry(QtCore.QRect(390, 320, 301, 251))
        self.SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton.setText("")
        self.SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton.setObjectName("SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton")
        self.SWITCH_BAD_HABIT_7___ONYCHOPHAGIA_9_pushButton.clicked.connect(self.switch_7_9)
        self.SWITCH_BAD_HABIT_7___SMOKING_8_pushButton = QtWidgets.QPushButton(self.Bad_Habit_Page_7)
        self.SWITCH_BAD_HABIT_7___SMOKING_8_pushButton.setGeometry(QtCore.QRect(60, 320, 301, 231))
        self.SWITCH_BAD_HABIT_7___SMOKING_8_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_BAD_HABIT_7___SMOKING_8_pushButton.setText("")
        self.SWITCH_BAD_HABIT_7___SMOKING_8_pushButton.setObjectName("SWITCH_BAD_HABIT_7___SMOKING_8_pushButton")
        self.SWITCH_BAD_HABIT_7___SMOKING_8_pushButton.clicked.connect(self.switch_7_8)
        self.SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton = QtWidgets.QPushButton(self.Bad_Habit_Page_7)
        self.SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton.setGeometry(QtCore.QRect(730, 320, 301, 271))
        self.SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton.setText("")
        self.SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton.setObjectName("SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton")
        self.SWITCH_BAD_HABIT_7___ALCOHOL_10_pushButton.clicked.connect(self.switch_7_10)
        self.SWITCH_BAD_HABIT_7___HOME_2_pushButton = QtWidgets.QPushButton(self.Bad_Habit_Page_7)
        self.SWITCH_BAD_HABIT_7___HOME_2_pushButton.setGeometry(QtCore.QRect(10, 10, 141, 41))
        self.SWITCH_BAD_HABIT_7___HOME_2_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_BAD_HABIT_7___HOME_2_pushButton.setText("")
        self.SWITCH_BAD_HABIT_7___HOME_2_pushButton.setObjectName("SWITCH_BAD_HABIT_7___HOME_2_pushButton")
        self.SWITCH_BAD_HABIT_7___HOME_2_pushButton.clicked.connect(self.switch_0_2)
        self.SMOKING_PHOTO_BD = QtWidgets.QLabel(self.Bad_Habit_Page_7)
        self.SMOKING_PHOTO_BD.setGeometry(QtCore.QRect(60, 50, 301, 241))
        self.SMOKING_PHOTO_BD.setText("")
        self.SMOKING_PHOTO_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.SMOKING_PHOTO_BD.setObjectName("SMOKING_PHOTO_BD")
        self.ONYCHOPHAGIA_PHOTO_BD = QtWidgets.QLabel(self.Bad_Habit_Page_7)
        self.ONYCHOPHAGIA_PHOTO_BD.setGeometry(QtCore.QRect(393, 50, 301, 241))
        self.ONYCHOPHAGIA_PHOTO_BD.setText("")
        self.ONYCHOPHAGIA_PHOTO_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.ONYCHOPHAGIA_PHOTO_BD.setObjectName("ONYCHOPHAGIA_PHOTO_BD")
        self.ALCOHOL_PHOTO_BD = QtWidgets.QLabel(self.Bad_Habit_Page_7)
        self.ALCOHOL_PHOTO_BD.setGeometry(QtCore.QRect(725, 50, 301, 241))
        self.ALCOHOL_PHOTO_BD.setText("")
        self.ALCOHOL_PHOTO_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.ALCOHOL_PHOTO_BD.setObjectName("ALCOHOL_PHOTO_BD")
        self.stackedWidget.addWidget(self.Bad_Habit_Page_7)
        self.Smoking_Page_8 = QtWidgets.QWidget()
        self.Smoking_Page_8.setObjectName("Smoking_Page_8")
        self.label_10 = QtWidgets.QLabel(self.Smoking_Page_8)
        self.label_10.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_10.setText("")
        self.label_10.setPixmap(QtGui.QPixmap("7.png"))
        self.label_10.setObjectName("label_10")
        self.SMOKING_BD_label = QtWidgets.QLabel(self.Smoking_Page_8)
        self.SMOKING_BD_label.setGeometry(QtCore.QRect(0, 180, 541, 71))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.SMOKING_BD_label.setFont(font)
        self.SMOKING_BD_label.setStyleSheet("color:rgb(255, 255, 255);")
        self.SMOKING_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.SMOKING_BD_label.setObjectName("SMOKING_BD_label")
        self.SWITCH_SMOKING_8___BAD_HABIT_7_pushButton = QtWidgets.QPushButton(self.Smoking_Page_8)
        self.SWITCH_SMOKING_8___BAD_HABIT_7_pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.SWITCH_SMOKING_8___BAD_HABIT_7_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_SMOKING_8___BAD_HABIT_7_pushButton.setText("")
        self.SWITCH_SMOKING_8___BAD_HABIT_7_pushButton.setObjectName("SWITCH_SMOKING_8___BAD_HABIT_7_pushButton")
        self.SWITCH_SMOKING_8___BAD_HABIT_7_pushButton.clicked.connect(self.switch_0_7)
        self.PHOTO_SMOKING_BD = QtWidgets.QLabel(self.Smoking_Page_8)
        self.PHOTO_SMOKING_BD.setGeometry(QtCore.QRect(540, 0, 551, 611))
        self.PHOTO_SMOKING_BD.setText("")
        self.PHOTO_SMOKING_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.PHOTO_SMOKING_BD.setObjectName("PHOTO_SMOKING_BD")
        self.SMOKING_calendarWidget = QtWidgets.QCalendarWidget(self.Smoking_Page_8)
        self.SMOKING_calendarWidget.setGeometry(QtCore.QRect(0, 250, 541, 361))
        self.SMOKING_calendarWidget.setStyleSheet("QCalendarWidget.QMenu.QHeaderView {\n"
"    background-color: rgb(0, 255, 255);\n"
"}\n"
"\n"
"")
        self.SMOKING_calendarWidget.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.SMOKING_calendarWidget.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.SMOKING_calendarWidget.setObjectName("SMOKING_calendarWidget")
        self.SMOKING_calendarWidget.clicked[QDate].connect(self.date_clicked_4)
        self.stackedWidget.addWidget(self.Smoking_Page_8)
        self.Onychophagia_Page_9 = QtWidgets.QWidget()
        self.Onychophagia_Page_9.setObjectName("Onychophagia_Page_9")
        self.label_11 = QtWidgets.QLabel(self.Onychophagia_Page_9)
        self.label_11.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_11.setText("")
        self.label_11.setPixmap(QtGui.QPixmap("7.png"))
        self.label_11.setObjectName("label_11")
        self.ONYCHOPHAGIA_BD_label = QtWidgets.QLabel(self.Onychophagia_Page_9)
        self.ONYCHOPHAGIA_BD_label.setGeometry(QtCore.QRect(0, 180, 541, 71))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.ONYCHOPHAGIA_BD_label.setFont(font)
        self.ONYCHOPHAGIA_BD_label.setStyleSheet("color:rgb(255, 255, 255);")
        self.ONYCHOPHAGIA_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.ONYCHOPHAGIA_BD_label.setObjectName("ONYCHOPHAGIA_BD_label")
        self.SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton = QtWidgets.QPushButton(self.Onychophagia_Page_9)
        self.SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton.setText("")
        self.SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton.setObjectName("SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton")
        self.SWITCH_ONYCHOPHAGIA_9___BAD_HABIT_7_pushButton.clicked.connect(self.switch_0_7)
        self.PHOTO_ONYCHOPHAGIA_BD = QtWidgets.QLabel(self.Onychophagia_Page_9)
        self.PHOTO_ONYCHOPHAGIA_BD.setGeometry(QtCore.QRect(540, 0, 551, 611))
        self.PHOTO_ONYCHOPHAGIA_BD.setText("")
        self.PHOTO_ONYCHOPHAGIA_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.PHOTO_ONYCHOPHAGIA_BD.setObjectName("PHOTO_ONYCHOPHAGIA_BD")
        self.ONYCHOPHAGIA_calendarWidget = QtWidgets.QCalendarWidget(self.Onychophagia_Page_9)
        self.ONYCHOPHAGIA_calendarWidget.setGeometry(QtCore.QRect(0, 250, 541, 361))
        self.ONYCHOPHAGIA_calendarWidget.setStyleSheet("QCalendarWidget.QMenu.QHeaderView {\n"
"    background-color: rgb(0, 255, 255);\n"
"}\n"
"\n"
"")
        self.ONYCHOPHAGIA_calendarWidget.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.ONYCHOPHAGIA_calendarWidget.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.ONYCHOPHAGIA_calendarWidget.setObjectName("ONYCHOPHAGIA_calendarWidget")
        #Подключаем слот on_date_clicked к сигналу clicked календаря
        self.ONYCHOPHAGIA_calendarWidget.clicked[QDate].connect(self.date_clicked)

        self.stackedWidget.addWidget(self.Onychophagia_Page_9)
        self.Alcohol_Page_10 = QtWidgets.QWidget()
        self.Alcohol_Page_10.setObjectName("Alcohol_Page_10")
        self.label_12 = QtWidgets.QLabel(self.Alcohol_Page_10)
        self.label_12.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_12.setText("")
        self.label_12.setPixmap(QtGui.QPixmap("7.png"))
        self.label_12.setObjectName("label_12")
        self.SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton = QtWidgets.QPushButton(self.Alcohol_Page_10)
        self.SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton.setGeometry(QtCore.QRect(30, 50, 141, 51))
        self.SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton.setText("")
        self.SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton.setObjectName("SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton")
        self.SWITCH_ALCOHOL_10___BAD_HABIT_7_pushButton.clicked.connect(self.switch_0_7)
        self.ALCOHOL_BD_label = QtWidgets.QLabel(self.Alcohol_Page_10)
        self.ALCOHOL_BD_label.setGeometry(QtCore.QRect(0, 180, 541, 71))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.ALCOHOL_BD_label.setFont(font)
        self.ALCOHOL_BD_label.setStyleSheet("color:rgb(255, 255, 255);")
        self.ALCOHOL_BD_label.setAlignment(QtCore.Qt.AlignCenter)
        self.ALCOHOL_BD_label.setObjectName("ALCOHOL_BD_label")
        self.PHOTO_ALCOHOL_BD = QtWidgets.QLabel(self.Alcohol_Page_10)
        self.PHOTO_ALCOHOL_BD.setGeometry(QtCore.QRect(540, 0, 551, 611))
        self.PHOTO_ALCOHOL_BD.setText("")
        self.PHOTO_ALCOHOL_BD.setPixmap(QtGui.QPixmap("8.jpg"))
        self.PHOTO_ALCOHOL_BD.setObjectName("PHOTO_ALCOHOL_BD")
        self.ALCOHOL_calendarWidget = QtWidgets.QCalendarWidget(self.Alcohol_Page_10)
        self.ALCOHOL_calendarWidget.setGeometry(QtCore.QRect(0, 250, 541, 361))
        self.ALCOHOL_calendarWidget.setStyleSheet("QCalendarWidget.QMenu.QHeaderView {\n"
"    background-color: rgb(0, 255, 255);\n"
"}\n"
"\n"
"")
        self.ALCOHOL_calendarWidget.setHorizontalHeaderFormat(QtWidgets.QCalendarWidget.ShortDayNames)
        self.ALCOHOL_calendarWidget.setVerticalHeaderFormat(QtWidgets.QCalendarWidget.NoVerticalHeader)
        self.ALCOHOL_calendarWidget.setObjectName("ALCOHOL_calendarWidget")
        self.ALCOHOL_calendarWidget.clicked[QDate].connect(self.date_clicked_5)
        self.stackedWidget.addWidget(self.Alcohol_Page_10)
        self.Advice_Page_11 = QtWidgets.QWidget()
        self.Advice_Page_11.setObjectName("Advice_Page_11")
        self.label_6 = QtWidgets.QLabel(self.Advice_Page_11)
        self.label_6.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("6.png"))
        self.label_6.setObjectName("label_6")
        self.SWITCH_ADVICE_11___HOME_2_pushButton = QtWidgets.QPushButton(self.Advice_Page_11)
        self.SWITCH_ADVICE_11___HOME_2_pushButton.setGeometry(QtCore.QRect(10, 10, 141, 41))
        self.SWITCH_ADVICE_11___HOME_2_pushButton.setStyleSheet("background-color: rgba(0,0,0,0);\n"
"border: none;")
        self.SWITCH_ADVICE_11___HOME_2_pushButton.setText("")
        self.SWITCH_ADVICE_11___HOME_2_pushButton.setObjectName("SWITCH_ADVICE_11___HOME_2_pushButton")
        self.SWITCH_ADVICE_11___HOME_2_pushButton.clicked.connect(self.switch_0_2)
        self.stackedWidget.addWidget(self.Advice_Page_11)
        self.ENTRANCE_Page_12 = QtWidgets.QWidget()
        self.ENTRANCE_Page_12.setObjectName("ENTRANCE_Page_12")
        self.ENTRANCE_PASSWORD_lineEdit = QtWidgets.QLineEdit(self.ENTRANCE_Page_12)
        self.ENTRANCE_PASSWORD_lineEdit.setGeometry(QtCore.QRect(310, 425, 161, 31))
        self.ENTRANCE_PASSWORD_lineEdit.setObjectName("ENTRANCE_PASSWORD_lineEdit")
        self.ENTRANCE_LOGIN_lineEdit = QtWidgets.QLineEdit(self.ENTRANCE_Page_12)
        self.ENTRANCE_LOGIN_lineEdit.setGeometry(QtCore.QRect(300, 305, 171, 31))
        self.ENTRANCE_LOGIN_lineEdit.setObjectName("ENTRANCE_LOGIN_lineEdit")
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton = QtWidgets.QPushButton(self.ENTRANCE_Page_12)
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.setGeometry(QtCore.QRect(556, 468, 491, 110))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.setFont(font)
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.setStyleSheet("background-color: rgb(28, 33, 32);\n"
"border: none;\n"
"color:#f2efeb;")
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.setObjectName("SWITCH_ENTRANCE_12___HOME_2_pushButton")
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.clicked.connect(self.check_login_password)
        self.label_13 = QtWidgets.QLabel(self.ENTRANCE_Page_12)
        self.label_13.setGeometry(QtCore.QRect(0, 0, 1087, 611))
        self.label_13.setText("")
        self.label_13.setPixmap(QtGui.QPixmap("2.png"))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.ENTRANCE_Page_12)
        self.label_14.setGeometry(QtCore.QRect(70, 160, 411, 71))
        font = QtGui.QFont()
        font.setPointSize(30)
        self.label_14.setFont(font)
        self.label_14.setStyleSheet("background-color:rgb(242, 239, 235);")
        self.label_14.setAlignment(QtCore.Qt.AlignCenter)
        self.label_14.setObjectName("label_14")
        self.label_13.raise_()
        self.ENTRANCE_PASSWORD_lineEdit.raise_()
        self.ENTRANCE_LOGIN_lineEdit.raise_()
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.raise_()
        self.label_14.raise_()
        self.stackedWidget.addWidget(self.ENTRANCE_Page_12)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Habit_Tracker"))
        self.SWITCH_MAIN_0___ENTRANCE_12_pushButton.setText(_translate("MainWindow", "Вход"))
        self.DREAM_BD_label.setText(_translate("MainWindow", "."))
        self.WORK_OUT_BD_label.setText(_translate("MainWindow", "."))
        self.WATER_BD_label.setText(_translate("MainWindow", "."))
        self.SMOKING_BD_label.setText(_translate("MainWindow", "."))
        self.ONYCHOPHAGIA_BD_label.setText(_translate("MainWindow", "."))
        self.ALCOHOL_BD_label.setText(_translate("MainWindow", "."))
        self.SWITCH_ENTRANCE_12___HOME_2_pushButton.setText(_translate("MainWindow", "Войти"))
        self.label_14.setText(_translate("MainWindow", "Вход"))

    def switch_0_1(self, index):
            self.stackedWidget.setCurrentIndex(1)  # функция перехода на следующую страницу

    def switch_0_12(self, index):
            self.stackedWidget.setCurrentIndex(12)  # функция перехода на следующую страницу

    def switch_12_2(self, index):
            self.stackedWidget.setCurrentIndex(2)  # функция перехода на следующую страницу

    def registration(self):
            con = sqlite3.connect('habit_tracker.db')
            cur = con.cursor()
            a = self.LOGIN_lineEdit.text()
            b = self.PASSWORD_lineEdit.text()
            query1 = f" INSERT INTO users (login,password) VALUES('{a}','{b}')"
            cur.execute(query1)
            con.commit()
            cur.close()
            con.close()
            self.stackedWidget.setCurrentIndex(2)  # регистрация пользователя

    def switch_0_2(self, index):
            self.stackedWidget.setCurrentIndex(2)  # функция перехода на следующую страницу



    def switch_0_3(self, index):
            self.stackedWidget.setCurrentIndex(3)
            # здесь мы вытаскиваем из бд 3 маленьких картинки хороших привычек

            self.conn = sqlite3.connect('habit_tracker.db')
            cursor = self.conn.cursor()

            # Список идентификаторов трех хороших привычек
            good_habit_ids = [1, 2, 3]

            # Обработка изображений для каждого идентификатора
            for i, habit_id in enumerate(good_habit_ids, start=1):
                    cursor.execute('SELECT photo FROM photos WHERE id = ?', (habit_id,))
                    row = cursor.fetchone()
                    photo_data = row[0]
                    pixmap = QPixmap()
                    pixmap.loadFromData(photo_data)

                    # Присваивание изображениям соответствующих меток
                    if i == 1:
                            self.DREAM_PHOTO_BD.setPixmap(pixmap)
                    elif i == 2:
                            self.WORK_OUT_PHOTO_BD.setPixmap(pixmap)
                    elif i == 3:
                            self.WATER_PHOTO_BD.setPixmap(pixmap)

    def switch_0_7(self, index):
            self.stackedWidget.setCurrentIndex(7)
            # здесь мы вытаскиваем из бд 3 маленьких картинки плохих привычек
            self.conn = sqlite3.connect('habit_tracker.db')
            cursor = self.conn.cursor()

            # Список идентификаторов трех плохих привычек
            bad_habit_ids = [4, 5, 6]

            # Обработка изображений для каждого идентификатора
            for i, habit_id in enumerate(bad_habit_ids, start=1):
                    cursor.execute('SELECT photo FROM photos WHERE id = ?', (habit_id,))
                    row = cursor.fetchone()
                    photo_data = row[0]
                    pixmap = QPixmap()
                    pixmap.loadFromData(photo_data)

                    # Присваивание изображениям соответствующих меток
                    if i == 1:
                            self.SMOKING_PHOTO_BD.setPixmap(pixmap)
                    elif i == 2:
                            self.ONYCHOPHAGIA_PHOTO_BD.setPixmap(pixmap)
                    elif i == 3:
                            self.ALCOHOL_PHOTO_BD.setPixmap(pixmap)

    def switch_2_11(self, index):
            self.stackedWidget.setCurrentIndex(11)  # функция перехода на следующую страницу

    def switch_habit(self, index, habit_id, pixmap_label, text_label):
            self.stackedWidget.setCurrentIndex(index)  # функция перехода на следующую страницу
            # здесь мы вытаскиваем из бд 1 большую картинку про привычку
            self.conn = sqlite3.connect('habit_tracker.db')
            cursor = self.conn.cursor()
            cursor.execute('SELECT photo FROM photos WHERE id = ?', (habit_id,))
            row = cursor.fetchone()
            photo_data = row[0]
            pixmap = QPixmap()
            pixmap.loadFromData(photo_data)
            pixmap_label.setPixmap(pixmap)
            text_label.setText(informationDatabase.name_vivod(habit_id))

    def switch_3_4(self, index):
            self.switch_habit(4, 7, self.PHOTO_DREAM_OUT_BD, self.DREAM_BD_label)

    def switch_3_5(self, index):
            self.switch_habit(5, 8, self.PHOTO_WORK_OUT_BD, self.WORK_OUT_BD_label)

    def switch_3_6(self, index):
            self.switch_habit(6, 9, self.PHOTO_WATER_BD, self.WATER_BD_label)

    def switch_7_9(self, index):
            self.switch_habit(9, 11, self.PHOTO_ONYCHOPHAGIA_BD, self.ONYCHOPHAGIA_BD_label)

    def switch_7_8(self, index):
            self.switch_habit(8, 10, self.PHOTO_SMOKING_BD, self.SMOKING_BD_label)

    def switch_7_10(self, index):
            self.switch_habit(10, 12, self.PHOTO_ALCOHOL_BD, self.ALCOHOL_BD_label)

    def date_clicked(self, date):
        if date == QDate.currentDate():
                self.conn = sqlite3.connect('habit_tracker.db')
                self.cursor = self.conn.cursor()
                self.ONYCHOPHAGIA_calendarWidget.setDateTextFormat(date, self.green_text_format())
                login = self.LOGIN_lineEdit.text() or self.ENTRANCE_LOGIN_lineEdit.text()
                password = self.PASSWORD_lineEdit.text() or self.ENTRANCE_PASSWORD_lineEdit.text()

                self.cursor.execute('''INSERT INTO habits (habit, date, status, login, password)
                                         VALUES (?, ?, ?, ?, ? )''', ('Онихофагия', date.toString(Qt.ISODate), 1, login, password))
                self.conn.commit()
        else:
            self.ONYCHOPHAGIA_calendarWidget.setDateTextFormat(date, self.default_text_format())

    def green_text_format(self):
        text_format = self.default_text_format()
        text_format.setBackground(QColor(0, 255, 0, 127))
        return text_format

    def default_text_format(self):
        text_format = self.ONYCHOPHAGIA_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format

    def date_clicked_1(self, date):
        if date == QDate.currentDate():
                self.conn = sqlite3.connect('habit_tracker.db')
                self.cursor = self.conn.cursor()
                self.DREAM_calendarWidget.setDateTextFormat(date, self.green_text_format_1())
                login = self.LOGIN_lineEdit.text() or self.ENTRANCE_LOGIN_lineEdit.text()
                password = self.PASSWORD_lineEdit.text() or self.ENTRANCE_PASSWORD_lineEdit.text()

                self.cursor.execute('''INSERT INTO dream (habit, date, status, login, password)
                                         VALUES (?, ?, ?, ?, ? )''', ('Сон', date.toString(Qt.ISODate), 1, login, password))
                self.conn.commit()
        else:
            self.DREAM_calendarWidget.setDateTextFormat(date, self.default_text_format_1())

    def green_text_format_1(self):
        text_format = self.default_text_format_1()
        text_format.setBackground(QColor(0, 255, 0, 127))
        return text_format

    def default_text_format_1(self):
        text_format = self.DREAM_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format


    def date_clicked_2(self, date):
        if date == QDate.currentDate():
                self.conn = sqlite3.connect('habit_tracker.db')
                self.cursor = self.conn.cursor()
                self.WORK_OUT_calendarWidget.setDateTextFormat(date, self.green_text_format_2())
                login = self.LOGIN_lineEdit.text() or self.ENTRANCE_LOGIN_lineEdit.text()
                password = self.PASSWORD_lineEdit.text() or self.ENTRANCE_PASSWORD_lineEdit.text()

                self.cursor.execute('''INSERT INTO workOut (habit, date, status, login, password)
                                         VALUES (?, ?, ?, ?, ? )''', ('Зарядка', date.toString(Qt.ISODate), 1, login, password))
                self.conn.commit()
        else:
            self.WORK_OUT_calendarWidget.setDateTextFormat(date, self.default_text_format_2())

    def green_text_format_2(self):
        text_format = self.default_text_format_2()
        text_format.setBackground(QColor(0, 255, 0, 127))
        return text_format

    def default_text_format_2(self):
        text_format = self.WORK_OUT_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format

    def date_clicked_3(self, date):
        if date == QDate.currentDate():
                self.conn = sqlite3.connect('habit_tracker.db')
                self.cursor = self.conn.cursor()
                self.WATER_calendarWidget.setDateTextFormat(date, self.green_text_format_3())
                login = self.LOGIN_lineEdit.text() or self.ENTRANCE_LOGIN_lineEdit.text()
                password = self.PASSWORD_lineEdit.text() or self.ENTRANCE_PASSWORD_lineEdit.text()

                self.cursor.execute('''INSERT INTO water (habit, date, status, login, password)
                                         VALUES (?, ?, ?, ?, ? )''', ('Вода', date.toString(Qt.ISODate), 1, login, password))
                self.conn.commit()
        else:
            self.WATER_calendarWidget.setDateTextFormat(date, self.default_text_format_3())

    def green_text_format_3(self):
        text_format = self.default_text_format_3()
        text_format.setBackground(QColor(0, 255, 0, 127))
        return text_format

    def default_text_format_3(self):
        text_format = self.WATER_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format

    def date_clicked_4(self, date):
        if date == QDate.currentDate():
                self.conn = sqlite3.connect('habit_tracker.db')
                self.cursor = self.conn.cursor()
                self.SMOKING_calendarWidget.setDateTextFormat(date, self.green_text_format_4())
                login = self.LOGIN_lineEdit.text() or self.ENTRANCE_LOGIN_lineEdit.text()
                password = self.PASSWORD_lineEdit.text() or self.ENTRANCE_PASSWORD_lineEdit.text()

                self.cursor.execute('''INSERT INTO smoking (habit, date, status, login, password)
                                         VALUES (?, ?, ?, ?, ? )''', ('Курение', date.toString(Qt.ISODate), 1, login, password))
                self.conn.commit()
        else:
            self.SMOKING_calendarWidget.setDateTextFormat(date, self.default_text_format_4())

    def green_text_format_4(self):
        text_format = self.default_text_format_4()
        text_format.setBackground(QColor(0, 255, 0, 127))
        return text_format

    def default_text_format_4(self):
        text_format = self.SMOKING_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format

    def date_clicked_5(self, date):
        if date == QDate.currentDate():
                self.conn = sqlite3.connect('habit_tracker.db')
                self.cursor = self.conn.cursor()
                self.ALCOHOL_calendarWidget.setDateTextFormat(date, self.green_text_format_5())
                login = self.LOGIN_lineEdit.text() or self.ENTRANCE_LOGIN_lineEdit.text()
                password = self.PASSWORD_lineEdit.text() or self.ENTRANCE_PASSWORD_lineEdit.text()

                self.cursor.execute('''INSERT INTO alcohol (habit, date, status, login, password)
                                         VALUES (?, ?, ?, ?, ? )''', ('Алкоголь', date.toString(Qt.ISODate), 1, login, password))
                self.conn.commit()
        else:
            self.ALCOHOL_calendarWidget.setDateTextFormat(date, self.default_text_format_5())

    def green_text_format_5(self):
        text_format = self.default_text_format_5()
        text_format.setBackground(QColor(0, 255, 0, 127))
        return text_format

    def default_text_format_5(self):
        text_format = self.ALCOHOL_calendarWidget.dateTextFormat(QDate())
        text_format.setBackground(QColor(255, 255, 255, 0))
        return text_format



    def check_login_password(self):
            # Получить логин и пароль из соответствующих полей ввода
            login = self.ENTRANCE_LOGIN_lineEdit.text()
            password = self.ENTRANCE_PASSWORD_lineEdit.text()

            # Подключиться к базе данных
            conn = sqlite3.connect('habit_tracker.db')
            cursor = conn.cursor()

            # Проверить, существует ли пользователь с таким логином и паролем в таблице users
            cursor.execute("SELECT * FROM users WHERE login=? AND password=?", (login, password))
            user = cursor.fetchone()

            if user:
                    self.stackedWidget.setCurrentIndex(2)
                    login = self.ENTRANCE_LOGIN_lineEdit.text()
                    password = self.ENTRANCE_PASSWORD_lineEdit.text()

                    # Подключиться к базе данных
                    conn = sqlite3.connect('habit_tracker.db')
                    cursor = conn.cursor()
                    # Если пользователь существует, показать только его отметки дат для онихофагии
                    cursor.execute("SELECT date FROM habits WHERE login=? AND password=?",(login, password))
                    dates = cursor.fetchall()

                    for date in dates:
                            date = QDate.fromString(date[0], 'yyyy-MM-dd')
                            self.ONYCHOPHAGIA_calendarWidget.setDateTextFormat(date, self.green_text_format())

                    # Если пользователь существует, показать только его отметки дат для сна
                    cursor.execute("SELECT date FROM dream WHERE login=? AND password=?", (login, password))
                    datess = cursor.fetchall()

                    for datee in datess:
                            datee = QDate.fromString(datee[0], 'yyyy-MM-dd')
                            self.DREAM_calendarWidget.setDateTextFormat(datee, self.green_text_format_1())

                    # Если пользователь существует, показать только его отметки дат для зарядки
                    cursor.execute("SELECT date FROM workOut WHERE login=? AND password=?", (login, password))
                    datesss = cursor.fetchall()

                    for dateee in datesss:
                            dateee = QDate.fromString(dateee[0], 'yyyy-MM-dd')
                            self.WORK_OUT_calendarWidget.setDateTextFormat(dateee, self.green_text_format_2())

                    # Если пользователь существует, показать только его отметки дат для воды
                    cursor.execute("SELECT date FROM water WHERE login=? AND password=?", (login, password))
                    datessss = cursor.fetchall()

                    for dateeee in datessss:
                            dateeee = QDate.fromString(dateeee[0], 'yyyy-MM-dd')
                            self.WORK_OUT_calendarWidget.setDateTextFormat(dateeee, self.green_text_format_3())
                    # Если пользователь существует, показать только его отметки дат когда он не курил
                    cursor.execute("SELECT date FROM smoking WHERE login=? AND password=?", (login, password))
                    datesssss = cursor.fetchall()

                    for dateeeee in datesssss:
                            dateeeee = QDate.fromString(dateeeee[0], 'yyyy-MM-dd')
                            self.SMOKING_calendarWidget.setDateTextFormat(dateeeee, self.green_text_format_4())

                    # Если пользователь существует, показать только его отметки дат когда он не употреблял алкоголь
                    cursor.execute("SELECT date FROM alcohol WHERE login=? AND password=?", (login, password))
                    datessssss = cursor.fetchall()

                    for dateeeeee in datessssss:
                            dateeeeee = QDate.fromString(dateeeeee[0], 'yyyy-MM-dd')
                            self.ALCOHOL_calendarWidget.setDateTextFormat(dateeeeee, self.green_text_format_5())


            # Закрыть соединение с базой данных
            else:
                    self.stackedWidget.setCurrentIndex(0)

            conn.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
